name: Build

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy (e.g., production, staging)"
                required: true
                default: "production"

permissions:
    contents: write # Ensure write access to the repository

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Ensure all history and tags are fetched

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "20"
                  registry-url: "https://registry.npmjs.org/"

            - name: Set Git identity
              run: |
                  git config --global user.email "keithwalsh@gmail.com"
                  git config --global user.name "keithwalsh"

            - name: Install dependencies
              run: npm install

            - name: Setup npm authentication
              run: |
                  echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" >> ~/.npmrc
                  cat ~/.npmrc
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN2 }}

            - name: Verify npm authentication
              run: |
                  npm whoami
                  npm config get registry
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN2 }}

            - name: Publish to npm
              run: |
                  npm config list
                  npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN2 }}

            - name: Get version from package.json
              id: package_version
              run: |
                VERSION=$(node -p "require('./package.json').version")
                echo "version=v${VERSION}" >> $GITHUB_OUTPUT

            - name: Create Git tag
              run: |
                git tag ${{ steps.package_version.outputs.version }}
                git push origin ${{ steps.package_version.outputs.version }}

            - name: Create GitHub Release
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                gh release create ${{ steps.package_version.outputs.version }} \
                  --title "Release ${{ steps.package_version.outputs.version }}" \
                  --notes "Automated release for version ${{ steps.package_version.outputs.version }}" \
                  --verify-tag

    chromatic:
        name: Run Chromatic
        runs-on: ubuntu-latest
        needs: release # Ensure Chromatic runs after the release job

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "20"

            - name: Install dependencies
              run: npm ci

            - name: Run Chromatic
              id: chromatic
              uses: chromaui/action@latest
              with:
                  projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
                  exitOnceUploaded: true
                  autoAcceptChanges: ${{ github.event.inputs.environment == 'production' }}
                  onlyChanged: true
                  skip: ${{ github.event.inputs.environment != 'production' }}